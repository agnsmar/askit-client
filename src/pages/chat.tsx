/* eslint-disable @typescript-eslint/no-misused-promises */
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable max-len */
import Head from "next/head";
import ChatMessage from "~/components/ChatMessage";
import { yieldStream } from "yield-stream"

const messages = [
  { role: 'assistant', content: 'banana?' },
  { role: 'user', content: 'yes!' }
]

export default function Home() {
  async function handleNewMessage() {
    /*
    const updatedMessages = [...messages, message];

    setMessages(updatedMessages);
    setContent('')
    setIsThinking(true);
    */

    const response = await fetch('/api/chat', {
      method: 'POST',
      body: JSON.stringify({
        messages
      }),
    });

    console.log(await response.json())
    if (!response.ok) {
      throw new Error(response.statusText);
    }

    const data = response.body;

    if (!data) {
      throw new Error('no data')
    }

    /*
    setIsThinking(false);

    let isFirst = true;
    */
    for await (const chunk of yieldStream(data)) {
      console.log('1')
      console.log(chunk)
    }
  }

  return (
    <>
      <Head>
        <title>AskIT</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
      <div className="flex h-full w-full flex-col items-center gap-2 px-8 pt-4">
        <h1 className="self-center font-black text-white">AskIT</h1>
        <h6 className="self-center italic text-white">
          Powered by gpt-3.5-turbo
        </h6>
      </div>
      <div className="h-full w-[700px] min-w-max max-w-[800px] shrink justify-end rounded-md border-2 border-solid border-gray-500 bg-slate-800">
        <div className="flex h-[500px] flex-col gap-4 overflow-y-auto p-4">
          <ChatMessage
            id={0}
            role="assistant"
            content="Hejsan! Vad kan jag hjÃ¤lpa dig med idag?"
          />
        </div>

        <MessageInput content={''} onSend={handleNewMessage} />
      </div>
      </main>
    </>
  );
}

type Message = {
  role: 'assistant' | 'user';
  content: string
}

type MessageInputProps = {
  content: string;
  onSend: (message: Message) => void;
}

export function MessageInput({ content, onSend }: MessageInputProps) {
  return (
    <div className="h-auto w-full place-self-end bg-slate-700">
      
      <form
        onSubmit={e => {
          e.preventDefault();
          onSend({ role: 'user', content });
        }}
      >
      <div className="no-wrap flex p-2">
        <textarea
          tabIndex={0}
          className="normal-whitespace h-20 w-full max-w-full grow resize-none break-words rounded-md bg-slate-100 p-2 outline-none"
          name="message"
          required
        />
        <button
          className="ml-2 h-10 shrink-0 grow-0 rounded-md bg-gray-500 pl-3 pr-3"
        >
          SEND
        </button>
        </div>
      </form>
      
    </div>
  );
}